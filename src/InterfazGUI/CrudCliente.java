/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package InterfazGUI;

import Modelo.Banco;
import Modelo.Cliente;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author benal
 */
public class CrudCliente extends javax.swing.JFrame {

    /**
     * Creates new form CrudCliente
     */
    public CrudCliente() {
        initComponents();
        setLocationRelativeTo(null);// Centra la ventana 
        actualizarTabla();
        txtFiltro.getDocument().addDocumentListener(new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent e) {
        filtrarTabla();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        filtrarTabla();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        filtrarTabla();
    }
    
        }
    );
    }
        
  private void actualizarTabla() {
    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    modelo.setRowCount(0); // Limpiar tabla

    for (Cliente c : Banco.getInstancia().getClientes()) {
        modelo.addRow(new Object[]{
            c.getCodigo(),
            c.getNombre(),              
            c.getGenero(),
            c.getEdad(),
            c.tieneDiscapacidad() ? "Sí" : "No",
            c.tieneBebe() ? "Sí" : "No",
            c.getTramite(),
            c.getCategoria()
        });
    }
}
    
    private void filtrarTabla() {
    String texto = txtFiltro.getText().trim().toLowerCase();
    DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
    modelo.setRowCount(0); // limpiar tabla

    for (Cliente c : Banco.getInstancia().getClientes()) {
        String nombre = c.getNombre().toLowerCase();
        String categoria = String.valueOf(c.getCategoria()).toLowerCase();

        if (texto.isEmpty() || nombre.contains(texto) || categoria.equals(texto)) {
            modelo.addRow(new Object[]{
                c.getCodigo(),
                c.getNombre(),
                c.getGenero(),
                c.getEdad(),
                c.tieneDiscapacidad() ? "Sí" : "No",
                c.tieneBebe() ? "Sí" : "No",
                c.getTramite(),
                c.getCategoria()
            });
        }
    }
}
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAgregarC = new javax.swing.JButton();
        btnActualizarC = new javax.swing.JButton();
        btnEliminarC = new javax.swing.JButton();
        btnSalirC = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Genero", "Edad", "Discapacidad", "Bebé", "Trámite", "Categoría"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnAgregarC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAgregarC.setText("Agregar Cliente");
        btnAgregarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCActionPerformed(evt);
            }
        });

        btnActualizarC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnActualizarC.setText("Actualizar Cliente");
        btnActualizarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarCActionPerformed(evt);
            }
        });

        btnEliminarC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEliminarC.setText("Eliminar Cliente");
        btnEliminarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCActionPerformed(evt);
            }
        });

        btnSalirC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSalirC.setText("Salir");
        btnSalirC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirCActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Filtrado por Nombre:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnAgregarC)
                        .addGap(18, 18, 18)
                        .addComponent(btnActualizarC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalirC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarC)
                    .addComponent(btnActualizarC)
                    .addComponent(btnEliminarC)
                    .addComponent(btnSalirC)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirCActionPerformed
        this.dispose(); // cerrar la ventana actual
    }//GEN-LAST:event_btnSalirCActionPerformed

    private void btnAgregarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCActionPerformed
        IngresoUsuario ingreso = new IngresoUsuario(this, true);// abrir formulario para agregar nuevo cliente
        ingreso.setVisible(true);
        actualizarTabla();
    }//GEN-LAST:event_btnAgregarCActionPerformed

    private void btnActualizarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarCActionPerformed
        int fila = jTable1.getSelectedRow(); // obtener la fila seleccionada de la tabla

    if (fila >= 0) {// obtener el cliente desde la lista usando la fila seleccionada
        Cliente cliente = Banco.getInstancia().getClientes().get(fila);
        IngresoUsuario editar = new IngresoUsuario(this, true, cliente, fila);// abrir formulario en edicion con el cliente seleccionado
        editar.setVisible(true);
        actualizarTabla();
    } else {// mostrar advertencia si no se selecciono ningun cliente
        JOptionPane.showMessageDialog(this, "Seleccione un cliente para editar", "Aviso", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnActualizarCActionPerformed

    private void btnEliminarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCActionPerformed
        int fila = jTable1.getSelectedRow();// obtener la fila seleccionada de la tabla

    if (fila >= 0) {
        // Confirmar antes de eliminar
        int confirmacion = JOptionPane.showConfirmDialog(// confirmar eliminacion con el usuario
            this,
            "¿Estás segura de que deseas eliminar este cliente?",
            "Confirmar eliminación",
            JOptionPane.YES_NO_OPTION
        );

        if (confirmacion == JOptionPane.YES_OPTION) {
            Banco.getInstancia().eliminarCliente(fila);// eliminar el cliente de la lista
            actualizarTabla();
            JOptionPane.showMessageDialog(this, "Cliente eliminado correctamente.");// mostrar mensaje de confirmacion
        }

    } else {// mostrar advertencia si no se selecciono ningun cliente
        JOptionPane.showMessageDialog(this, "Seleccione un cliente para eliminar", "Aviso", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnEliminarCActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarC;
    private javax.swing.JButton btnAgregarC;
    private javax.swing.JButton btnEliminarC;
    private javax.swing.JButton btnSalirC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
